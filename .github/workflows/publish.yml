name: Publish to package registries

on:
  release:
    types: [created]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # Environment setup
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: '20.x'
          registry-url: 'https://registry.npmjs.org'
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.3'
          extensions: json, mbstring
      - name: Install pnpm
        run: npm i -g pnpm
      
      # Install dependencies
      - name: Install dependencies with pnpm
        run: pnpm install
      - name: Install dependencies with composer
        run: composer install
      
      # Build and generate code
      - name: Build TypeScript
        run: pnpm build
      - name: Generate JsonSchema
        run: pnpm schema
      - name: Generate PHP
        run: pnpm generate:php

        # Run JS tests
      - name: Test JS
        run: pnpm test

        # Run PHP tests
      - name: Test PHP
        run: composer run test
      
      # Final touches
      - name: Replace version in package.json to be semver compatible
        run: sed -i "s/IN-DEV/$(echo $GITHUB_REF | sed 's/refs\/tags\///')/" package.json
      
      # JSON Schema Sync
      - name: Prepare json-schema publication
        run: |
          mkdir -p json-schema
          cp schema.json json-schema/dev.json
          cp schema.json json-schema/$(echo $GITHUB_REF | sed 's/refs\/tags\///').json
          cp schema.json json-schema/latest.json
      - name: Publish json-schema
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./json-schema
          destination_dir: json-schema
          publish_branch: gh-pages
          keep_files: true
      
      # Publish to registries
      - name: Publish package on NPM
        run: pnpm publish . --access public --no-git-checks
        env:
          NODE_AUTH_TOKEN: ${{secrets.NPM_SECRET}}
      
      # PHP Repo Sync
      - name: Load SSH Key
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.PHP_SECRET }}
      - name: Publish php source code to TECSAFE/jwt-sdk-php repository
        run: |
          git config --global user.email "noreply@tecsafe.de"
          git config --global user.name "CI Bot"
          git clone git@github.com:TECSAFE/jwt-sdk-php.git
          rm -rf jwt-sdk-php/*
          mkdir -p jwt-sdk-php/src
          cp -r src/php/ jwt-sdk-php/src/
          cp LICENSE composer.json composer.lock jwt-sdk-php/
          echo "WARNING: This repository is automatically generated from the jwt-sdk repository." > jwt-sdk-php/README.md
          echo "Do not edit files in this repository directly." >> jwt-sdk-php/README.md
          echo "" >> jwt-sdk-php/README.md
          cat README.md >> jwt-sdk-php/README.md
          cd jwt-sdk-php
          git add .
          git commit -m "Update to version $(echo $GITHUB_REF | sed 's/refs\/tags\///')"
          git push
          git tag $(echo $GITHUB_REF | sed 's/refs\/tags\///')
          git push origin --tags
